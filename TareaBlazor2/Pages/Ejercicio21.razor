@page "/ejercicio/21"

<PageTitle>Ejercicio 21</PageTitle>

<h2>Ejercicio 21: Contar números con un dígito en penúltima posición</h2>

<p>Ingresa 10 números enteros en el vector:</p>

@for (int i = 0; i < 10; i++)
{
    <input @bind="vector[i]" type="number" class="input-vector" />
}

<p>Ingresa un dígito a buscar (0-9):</p>
<input @bind="digito" type="number" min="0" max="9" />

<p>Resultado (Cantidad de números con el dígito en penúltima posición): @resultadoCantidad</p>

<button @onclick="ContarDigitoPenultimo" class="btn-calcular">Contar Números</button>

<a href="/menu-ejercicios" class="btn-volver">Volver al Menú de Ejercicios</a>

<style>
    .btn-volver {
        background-color: #e74c3c;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        text-decoration: none;
        font-size: 1em;
        display: inline-block;
        margin-top: 20px;
    }

        .btn-volver:hover {
            background-color: #c0392b;
        }

    .btn-calcular {
        background-color: #3498db;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 5px;
        text-decoration: none;
        font-size: 1em;
        margin-top: 10px;
        margin-right: 10px;
    }

        .btn-calcular:hover {
            background-color: #2980b9;
        }

    .input-vector {
        width: 50px;
        margin-right: 10px;
    }
</style>

@code {
    private int[] vector = new int[10];
    private int digito;
    private int resultadoCantidad = 0;

    private void ContarDigitoPenultimo()
    {
        resultadoCantidad = ContarPenultimo(vector, digito);
    }

    private int ContarPenultimo(int[] vec, int d)
    {
        int contador = 0;

        foreach (int numero in vec)
        {
            // Convertimos el número a cadena para verificar la penúltima posición
            string numeroStr = numero.ToString();

            if (numeroStr.Length >= 2 && numeroStr[^2] == d.ToString()[0]) // Verificamos si el penúltimo es el dígito
            {
                contador++;
            }
        }

        return contador;
    }
}

